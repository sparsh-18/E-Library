<html>

<head>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
<style>
.carousel-control-prev .carousel-control-prev-icon,
.carousel-control-next .carousel-control-next-icon {
    outline: black;
    background-color: rgba(0, 0, 0, 0.3);
}

.carousel-control-prev .fa-angle-left,
.carousel-control-next .fa-angle-right {
    color: black;
}

.carousel-caption {
  color: black;
}
</style>

</head>

<body style="background-color: #eee;">
    <main role="main">
    <div class="container"> 
      <a href="/student/book/<%= id %>" style="margin-top: 1%; z-index: 1;" class="btn btn-lg btn-success">Back</a>
        <div id="carousel" class="carousel" data-ride="carousel">
          <div class="carousel-inner">
            <div class="carousel-item active">
              
             
              <canvas style="padding: 20%; padding-top: 1%; padding-bottom: 6%;" id="pdf-canvas" class="d-block w-100" data-file="/upload/<%=bookPath%>"></canvas>
              
              <div class="carousel-caption d-none d-md-block">
                <span>Page: <span id="page-num"></span> / <span id="page-count"></span></span>
              </div>
            </div>
          </div>
          <a class="carousel-control-prev" href="#" role="button" data-slide="prev">
            <i class="fas fa fa-angle-left fa-2x"></i>
          <span class="sr-only">Previous</span>
        </a>
          <a class="carousel-control-next" href="#" role="button" data-slide="next">
            <i class="fas fa fa-angle-right fa-2x"></i>
          <span class="sr-only">Next</span>
        </a>
      </div>
      </div>>
      </main>

<script src="https://code.jquery.com/jquery-3.2.1.slim.min.js" integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js" integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q" crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js" integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl" crossorigin="anonymous"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.0.550/pdf.min.js" integrity="sha512-q0hFOnKNd1JCnzBxmOrLw+mUwVds2i/2/vI2Z79PsjUQzU/vHEHn+H6OSbGl3RdA3g6T9grpYzU/cnPurx5fJw==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.0.550/pdf.worker.min.js" integrity="sha512-Lb92/eA8/qL5BYdJw4KHR/sAPwr2cNhe83Zte2jegPXQqO5OEkzGrCOKp+DaaQWVcZH5O56Tt10G7jB4RnG+qQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>

<script>

$(function() {
  let pdfDoc = null,
      pageNum = 1,
      pageRendering = false,
      pageNumPending = null;

  const scale = 2.0,
        canvas = document.getElementById('pdf-canvas'),
        pnum = document.getElementById('page-num')
        ctx = canvas.getContext('2d');

  /**
   * Get page info from document, resize canvas accordingly, and render page.
   * @param num Page number.
   */
  function renderPage(num) {
    pageRendering = true;
    
    // Using promise to fetch the page
    pdfDoc.getPage(num).then(function(page) {
      const page_viewport = page.getViewport(scale);
      canvas.height = page_viewport.height;
      canvas.width = page_viewport.width;

      // Render PDF page into canvas context
      const renderContext = {
        canvasContext: ctx,
        viewport: page_viewport
      };
      const renderTask = page.render(renderContext);

      // Wait for rendering to finish
      renderTask.promise.then(function() {
        pageRendering = false;
        if (pageNumPending !== null) {
          // New page rendering is pending
          renderPage(pageNumPending);
          pageNumPending = null;
        }
      });
    });

    // Update page counters
    $(pnum).text(num);
  }

  /**
   * If another page rendering in progress, waits until the rendering is
   * finised. Otherwise, executes rendering immediately.
   */
  function queueRenderPage(num) {
    if (pageRendering) {
      pageNumPending = num;
    } else {
      renderPage(num);
    }
  }

  /**
   * Displays previous page.
   */
  $(".carousel-control-prev").click(function() {
    if (pageNum > 1) {
      pageNum--;
      queueRenderPage(pageNum);
    }
  });

  /**
   * Displays next page.
   */
  $(".carousel-control-next").click(function() {
    if (pageNum < pdfDoc.numPages) {
      pageNum++;
      queueRenderPage(pageNum);
    }
  });

  /**
   * Asynchronously downloads PDF.
   */
  (function() {
    const url = $(canvas).data("file");
    pdfjsLib.getDocument(url).then(function(pdfDoc_) {
      pdfDoc = pdfDoc_;
      $("#page-count").text(pdfDoc.numPages);

      // Initial/first page rendering
      renderPage(pageNum);
    });
  })();
});

</script>
</body>

</html>
